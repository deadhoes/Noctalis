local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

local Window = WindUI:CreateWindow({
    Title = "Noctalis Universal",
    Icon = "layers",
    Author = "Noctalis Softworks",
    Folder = "NCloud",
    Size = UDim2.fromOffset(600, 500),
    Transparent = false,
    Theme = "Dark",
    SideBarWidth = 180,
    HasOutline = true
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")

local PlayerTab = Window:Tab({Title = "Player", Icon = "user"})

local InfiniteJumpEnabled = false
local JumpConnection
PlayerTab:Toggle({
    Title = "Infinite Jump",
    Desc = "Jump infinitely when enabled",
    Value = false,
    Callback = function(state)
        InfiniteJumpEnabled = state
        if state then
            JumpConnection = UserInputService.JumpRequest:Connect(function()
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
                    LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
                end
            end)
            Window:Notify({Title = "Infinite Jump", Description = "Enabled", Duration = 2})
        else
            if JumpConnection then JumpConnection:Disconnect() end
            Window:Notify({Title = "Infinite Jump", Description = "Disabled", Duration = 2})
        end
    end
})

local WalkSpeedValue = 16
PlayerTab:Slider({
    Title = "WalkSpeed",
    Step = 1,
    Value = { Min = 16, Max = 200, Default = 16 },
    Callback = function(value)
        WalkSpeedValue = value
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
            LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = value
        end
    end
})

local JumpPowerValue = 50
PlayerTab:Slider({
    Title = "JumpPower",
    Step = 1,
    Value = { Min = 20, Max = 500, Default = 50 },
    Callback = function(value)
        JumpPowerValue = value
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
            LocalPlayer.Character:FindFirstChildOfClass("Humanoid").JumpPower = value
        end
    end
})

local GravityValue = 196.2
PlayerTab:Slider({
    Title = "Gravity",
    Step = 1,
    Value = { Min = 0, Max = 500, Default = 196.2 },
    Callback = function(value)
        GravityValue = value
        Workspace.Gravity = value
    end
})

local NoclipEnabled = false
local NoclipConnection
PlayerTab:Toggle({
    Title = "Noclip",
    Desc = "Walk through walls",
    Value = false,
    Callback = function(state)
        NoclipEnabled = state
        if state then
            NoclipConnection = RunService.Stepped:Connect(function()
                if LocalPlayer.Character then
                    for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                        if part:IsA("BasePart") then part.CanCollide = false end
                    end
                end
            end)
            Window:Notify({Title = "Noclip", Description = "Enabled", Duration = 2})
        else
            if NoclipConnection then NoclipConnection:Disconnect() end
            Window:Notify({Title = "Noclip", Description = "Disabled", Duration = 2})
        end
    end
})

local VisualTab = Window:Tab({Title = "Visual", Icon = "eye"})

local CurrentFOV = Workspace.CurrentCamera.FieldOfView
VisualTab:Slider({
    Title = "FOV",
    Desc = "Camera field of view",
    Value = { Min = 40, Max = 120, Default = CurrentFOV },
    Callback = function(value)
        Workspace.CurrentCamera.FieldOfView = value
    end
})

local FullbrightEnabled = false
VisualTab:Toggle({
    Title = "Fullbright",
    Desc = "Brightens the entire world",
    Value = false,
    Callback = function(state)
        FullbrightEnabled = state
        Lighting.Ambient = state and Color3.new(1,1,1) or Color3.fromRGB(127,127,127)
        Lighting.OutdoorAmbient = state and Color3.new(1,1,1) or Color3.fromRGB(127,127,127)
        Lighting.Brightness = state and 2 or 1
    end
})

local XRayEnabled = false
local OriginalTransparency = {}
VisualTab:Toggle({
    Title = "X-Ray",
    Desc = "See through walls",
    Value = false,
    Callback = function(state)
        XRayEnabled = state
        for _, part in ipairs(Workspace:GetDescendants()) do
            if part:IsA("BasePart") and part ~= LocalPlayer.Character then
                if state then
                    OriginalTransparency[part] = part.Transparency
                    part.Transparency = 0.7
                    part.LocalTransparencyModifier = 0.7
                else
                    part.Transparency = OriginalTransparency[part] or 0
                    part.LocalTransparencyModifier = 0
                end
            end
        end
    end
})

local FlightTab = Window:Tab({Title = "Flight", Icon = "feather"})

local FlyingEnabled = false
local FlySpeed = 50
local FlyVelocity
local FlyRenderConnection
FlightTab:Toggle({
    Title = "Flight",
    Desc = "Fly around the map",
    Value = false,
    Callback = function(state)
        FlyingEnabled = state
        if state then
            local character = LocalPlayer.Character
            if not character then return end
            
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if not humanoidRootPart then return end
            
            FlyVelocity = Instance.new("BodyVelocity")
            FlyVelocity.Velocity = Vector3.new(0,0,0)
            FlyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            FlyVelocity.P = 10000
            FlyVelocity.Parent = humanoidRootPart
            
            FlyRenderConnection = RunService.RenderStepped:Connect(function()
                if not FlyingEnabled then return end
                
                local camera = Workspace.CurrentCamera
                local moveDirection = Vector3.new(0,0,0)
                
                if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveDirection += camera.CFrame.LookVector end
                if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveDirection -= camera.CFrame.LookVector end
                if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveDirection -= camera.CFrame.RightVector end
                if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveDirection += camera.CFrame.RightVector end
                if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveDirection += Vector3.new(0,1,0) end
                if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then moveDirection -= Vector3.new(0,1,0) end
                
                FlyVelocity.Velocity = moveDirection.Magnitude > 0 and moveDirection.Unit * FlySpeed or Vector3.new(0,0,0)
            end)
            
            Window:Notify({Title = "Flight", Description = "Enabled (WASD + Space/LCtrl)", Duration = 3})
        else
            if FlyRenderConnection then FlyRenderConnection:Disconnect() end
            if FlyVelocity then FlyVelocity:Destroy() end
            Window:Notify({Title = "Flight", Description = "Disabled", Duration = 2})
        end
    end
})

FlightTab:Slider({
    Title = "Flight Speed",
    Value = { Min = 10, Max = 300, Default = 50 },
    Callback = function(value)
        FlySpeed = value
    end
})

local ScriptsTab = Window:Tab({Title = "Scripts", Icon = "code"})

ScriptsTab:Button({
    Title = "Infinite Yield",
    Desc = "Load admin commands",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
        Window:Notify({Title = "Scripts", Description = "Loaded Infinite Yield", Duration = 3})
    end
})

ScriptsTab:Button({
    Title = "Dex Explorer",
    Desc = "Roblox explorer",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
        Window:Notify({Title = "Scripts", Description = "Loaded Dex Explorer", Duration = 3})
    end
})

local SettingsTab = Window:Tab({Title = "Settings", Icon = "settings"})

SettingsTab:Button({
    Title = "Unload UI",
    Desc = "Remove the interface",
    Callback = function()
        if JumpConnection then JumpConnection:Disconnect() end
        if NoclipConnection then NoclipConnection:Disconnect() end
        if FlyRenderConnection then FlyRenderConnection:Disconnect() end
        if FlyVelocity then FlyVelocity:Destroy() end
        Workspace.Gravity = 196.2
        Window:Destroy()
    end
})

Window:Notify({Title = "Noctalis Universal", Description = "Loaded successfully!", Duration = 5})
